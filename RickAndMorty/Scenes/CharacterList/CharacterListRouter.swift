//
//  CharacterListRouter.swift
//  RickAndMorty
//
//  Created by Ricardo Ruiz on 12/12/2019.
//  Copyright (c) 2019 Ricardo Ruiz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol CharacterListRoutingLogic
{
    func routeToCharacterDetails()
}

protocol CharacterListDataPassing
{
    var dataStore: CharacterListDataStore? { get set }
}

class CharacterListRouter: NSObject, CharacterListRoutingLogic, CharacterListDataPassing
{
    weak var viewController: CharacterListViewController?
    var dataStore: CharacterListDataStore?
    
    // MARK: Routing
    
    func routeToCharacterDetails()
    {
        let destinationVC = CharacterDetailsViewController()
        var destinationDS = destinationVC.router!.dataStore!
        
        passDataToCharacterDetails(source: dataStore!, destination: &destinationDS)
        navigateToCharacterDetails(source: viewController!, destination: destinationVC)
    }
    
    // MARK: Navigation
    
    func navigateToCharacterDetails (source: CharacterListViewController, destination: CharacterDetailsViewController)
    {
        source.navigationController?.pushViewController(destination, animated: true)
        destination.ShowCharacterDetails()
    }
    
    // MARK: Passing data
    
    func passDataToCharacterDetails(source: CharacterListDataStore, destination: inout CharacterDetailsDataStore)
    {
        destination.character = source.character
    }
}
